---
```{r}
library(readr)
p1 <- read_csv("Downloads/CODGames_p1_380.csv")

library(readr)
p2 <- read_csv("Downloads/CODGames_p2_380.csv")

library(readr)
maps <- read_csv("Downloads/CODMaps.csv")

# Load required libraries
library(dplyr)
library(ggplot2)
library(readr)
library(stringr)


# Combine datasets
combined <- bind_rows(p1, p2)

# Clean whitespace from Map1, Map2, Choice
combined <- combined %>%
  mutate(
    Map1 = str_trim(Map1),
    Map2 = str_trim(Map2),
    Choice = str_trim(Choice)
  )

# Get official map names
official_maps <- str_trim(maps$Name)

# Filter out rows with no map voting (joined after vote)
combined <- combined %>%
  filter(!(is.na(Map1) & is.na(Map2)))

# Create a table of how many times each map appeared
map_appearances <- official_maps %>%
  setNames(official_maps) %>%
  lapply(function(map) {
    sum(combined$Map1 == map | combined$Map2 == map, na.rm = TRUE)
  }) %>%
  unlist()

# Create a table of how many times each map won
map_wins <- official_maps %>%
  setNames(official_maps) %>%
  lapply(function(map) {
    sum(combined$Choice == map, na.rm = TRUE)
  }) %>%
  unlist()

# Combine into a dataframe
map_stats <- data.frame(
  Map = names(map_appearances),
  Appearances = as.numeric(map_appearances),
  Wins = as.numeric(map_wins)
) %>%
  mutate(WinRate = Wins / Appearances)

# Plot the results
ggplot(map_stats, aes(x = reorder(Map, -WinRate), y = WinRate)) +
  geom_bar(stat = "identity", fill = "steelblue") +
  labs(
    title = "Map Win Rates",
    x = "Map",
    y = "Win Rate"
  ) +
  theme_minimal() +
  coord_flip()
```
